(load-and-use Test)
(load "lambda-shorthand.carp")

(defndynamic add-5 [i]
  ((: + :1 5) i))

(deftest test
  (assert-equal test
    9
    (add-5 4)
    "can use shorthand in dynamic land")

  (assert-equal test
    2
    ((: / :1 :2) 4 2)
    "can replace placeholders in flat list")

  (assert-equal test
    8
    ((: + :1 (+ 1 (+ 1 :2))) 4 2)
    "can replace placeholders in nested lists")

  (assert-equal test
    42
    ((: let [val :1 val2 :2] val2) 0 42)
    "can replace placeholders in nested arrays")

  (assert-equal test
    64
    ((: * :1 (* :1 :1)) 4)
    "can use same placeholder more than once")

  (assert-equal test
   "threetwoone"
   &(reduce &(: append :2 &:1) @"" &[@"one" @"two" @"three"])
   "can take reference of a placeholder")

  (assert-equal test
   12
   ((: do :12) 1 2 3 4 5 6 7 8 9 10 11 12)
   "can use non-sequential placeholders"))

